// Copyright 2020 Metropolitan Transportation Authority
//
// Mercury extensions for the GTFS-realtime protocol.
//
// Source: https://github.com/OneBusAway/onebusaway-gtfs-realtime-api/blob/master/src/main/proto/com/google/transit/realtime/gtfs-realtime-service-status.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: proto/us-ny-mta-alerts-extension.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MercuryEntitySelector_Priority int32

const (
	MercuryEntitySelector_PRIORITY_NO_SCHEDULED_SERVICE     MercuryEntitySelector_Priority = 1
	MercuryEntitySelector_PRIORITY_NO_MIDDAY_SERVICE        MercuryEntitySelector_Priority = 2
	MercuryEntitySelector_PRIORITY_NO_OVERNIGHT_SERVICE     MercuryEntitySelector_Priority = 3
	MercuryEntitySelector_PRIORITY_NO_WEEKEND_SERVICE       MercuryEntitySelector_Priority = 4
	MercuryEntitySelector_PRIORITY_WEEKDAY_SCHEDULE         MercuryEntitySelector_Priority = 5
	MercuryEntitySelector_PRIORITY_WEEKEND_SCHEDULE         MercuryEntitySelector_Priority = 6
	MercuryEntitySelector_PRIORITY_SATURDAY_SCHEDULE        MercuryEntitySelector_Priority = 7
	MercuryEntitySelector_PRIORITY_SUNDAY_SCHEDULE          MercuryEntitySelector_Priority = 8
	MercuryEntitySelector_PRIORITY_EXTRA_SERVICE            MercuryEntitySelector_Priority = 9
	MercuryEntitySelector_PRIORITY_SPECIAL_SCHEDULE         MercuryEntitySelector_Priority = 10
	MercuryEntitySelector_PRIORITY_STATION_NOTICE           MercuryEntitySelector_Priority = 11
	MercuryEntitySelector_PRIORITY_SPECIAL_EVENT            MercuryEntitySelector_Priority = 12
	MercuryEntitySelector_PRIORITY_PLANNED_BOARDING_CHANGE  MercuryEntitySelector_Priority = 13
	MercuryEntitySelector_PRIORITY_BOARDING_CHANGE          MercuryEntitySelector_Priority = 14
	MercuryEntitySelector_PRIORITY_REDUCED_SERVICE          MercuryEntitySelector_Priority = 15
	MercuryEntitySelector_PRIORITY_PLANNED_WORK             MercuryEntitySelector_Priority = 16
	MercuryEntitySelector_PRIORITY_PLANNED_STATIONS_SKIPPED MercuryEntitySelector_Priority = 17
	MercuryEntitySelector_PRIORITY_PLANNED_EXPRESS_TO_LOCAL MercuryEntitySelector_Priority = 18
	MercuryEntitySelector_PRIORITY_SLOW_SPEEDS              MercuryEntitySelector_Priority = 19
	MercuryEntitySelector_PRIORITY_EXPECT_DELAYS            MercuryEntitySelector_Priority = 20
	MercuryEntitySelector_PRIORITY_PLANNED_LOCAL_TO_EXPRESS MercuryEntitySelector_Priority = 21
	MercuryEntitySelector_PRIORITY_PLANNED_BUSES_DETOURED   MercuryEntitySelector_Priority = 22
	MercuryEntitySelector_PRIORITY_PLANNED_TRAINS_REROUTED  MercuryEntitySelector_Priority = 23
	MercuryEntitySelector_PRIORITY_PLANNED_SUBSTITUTE_BUSES MercuryEntitySelector_Priority = 24
	MercuryEntitySelector_PRIORITY_PLANNED_PART_SUSPENDED   MercuryEntitySelector_Priority = 25
	MercuryEntitySelector_PRIORITY_PLANNED_MULTIPLE_CHANGES MercuryEntitySelector_Priority = 26
	MercuryEntitySelector_PRIORITY_SOME_DELAYS              MercuryEntitySelector_Priority = 27
	MercuryEntitySelector_PRIORITY_STATIONS_SKIPPED         MercuryEntitySelector_Priority = 28
	MercuryEntitySelector_PRIORITY_EXPRESS_TO_LOCAL         MercuryEntitySelector_Priority = 29
	MercuryEntitySelector_PRIORITY_DELAYS                   MercuryEntitySelector_Priority = 30
	MercuryEntitySelector_PRIORITY_SOME_REROUTES            MercuryEntitySelector_Priority = 31
	MercuryEntitySelector_PRIORITY_LOCAL_TO_EXPRESS         MercuryEntitySelector_Priority = 32
	MercuryEntitySelector_PRIORITY_BUSES_DETOURED           MercuryEntitySelector_Priority = 33
	MercuryEntitySelector_PRIORITY_SERVICE_CHANGE           MercuryEntitySelector_Priority = 34
	MercuryEntitySelector_PRIORITY_TRAINS_REROUTED          MercuryEntitySelector_Priority = 35
	MercuryEntitySelector_PRIORITY_SUBSTITUTE_BUSES         MercuryEntitySelector_Priority = 36
	MercuryEntitySelector_PRIORITY_PART_SUSPENDED           MercuryEntitySelector_Priority = 37
	MercuryEntitySelector_PRIORITY_MULTIPLE_CHANGES         MercuryEntitySelector_Priority = 38
	MercuryEntitySelector_PRIORITY_PLANNED_SUSPENDED        MercuryEntitySelector_Priority = 39
	MercuryEntitySelector_PRIORITY_SUSPENDED                MercuryEntitySelector_Priority = 40
)

// Enum value maps for MercuryEntitySelector_Priority.
var (
	MercuryEntitySelector_Priority_name = map[int32]string{
		1:  "PRIORITY_NO_SCHEDULED_SERVICE",
		2:  "PRIORITY_NO_MIDDAY_SERVICE",
		3:  "PRIORITY_NO_OVERNIGHT_SERVICE",
		4:  "PRIORITY_NO_WEEKEND_SERVICE",
		5:  "PRIORITY_WEEKDAY_SCHEDULE",
		6:  "PRIORITY_WEEKEND_SCHEDULE",
		7:  "PRIORITY_SATURDAY_SCHEDULE",
		8:  "PRIORITY_SUNDAY_SCHEDULE",
		9:  "PRIORITY_EXTRA_SERVICE",
		10: "PRIORITY_SPECIAL_SCHEDULE",
		11: "PRIORITY_STATION_NOTICE",
		12: "PRIORITY_SPECIAL_EVENT",
		13: "PRIORITY_PLANNED_BOARDING_CHANGE",
		14: "PRIORITY_BOARDING_CHANGE",
		15: "PRIORITY_REDUCED_SERVICE",
		16: "PRIORITY_PLANNED_WORK",
		17: "PRIORITY_PLANNED_STATIONS_SKIPPED",
		18: "PRIORITY_PLANNED_EXPRESS_TO_LOCAL",
		19: "PRIORITY_SLOW_SPEEDS",
		20: "PRIORITY_EXPECT_DELAYS",
		21: "PRIORITY_PLANNED_LOCAL_TO_EXPRESS",
		22: "PRIORITY_PLANNED_BUSES_DETOURED",
		23: "PRIORITY_PLANNED_TRAINS_REROUTED",
		24: "PRIORITY_PLANNED_SUBSTITUTE_BUSES",
		25: "PRIORITY_PLANNED_PART_SUSPENDED",
		26: "PRIORITY_PLANNED_MULTIPLE_CHANGES",
		27: "PRIORITY_SOME_DELAYS",
		28: "PRIORITY_STATIONS_SKIPPED",
		29: "PRIORITY_EXPRESS_TO_LOCAL",
		30: "PRIORITY_DELAYS",
		31: "PRIORITY_SOME_REROUTES",
		32: "PRIORITY_LOCAL_TO_EXPRESS",
		33: "PRIORITY_BUSES_DETOURED",
		34: "PRIORITY_SERVICE_CHANGE",
		35: "PRIORITY_TRAINS_REROUTED",
		36: "PRIORITY_SUBSTITUTE_BUSES",
		37: "PRIORITY_PART_SUSPENDED",
		38: "PRIORITY_MULTIPLE_CHANGES",
		39: "PRIORITY_PLANNED_SUSPENDED",
		40: "PRIORITY_SUSPENDED",
	}
	MercuryEntitySelector_Priority_value = map[string]int32{
		"PRIORITY_NO_SCHEDULED_SERVICE":     1,
		"PRIORITY_NO_MIDDAY_SERVICE":        2,
		"PRIORITY_NO_OVERNIGHT_SERVICE":     3,
		"PRIORITY_NO_WEEKEND_SERVICE":       4,
		"PRIORITY_WEEKDAY_SCHEDULE":         5,
		"PRIORITY_WEEKEND_SCHEDULE":         6,
		"PRIORITY_SATURDAY_SCHEDULE":        7,
		"PRIORITY_SUNDAY_SCHEDULE":          8,
		"PRIORITY_EXTRA_SERVICE":            9,
		"PRIORITY_SPECIAL_SCHEDULE":         10,
		"PRIORITY_STATION_NOTICE":           11,
		"PRIORITY_SPECIAL_EVENT":            12,
		"PRIORITY_PLANNED_BOARDING_CHANGE":  13,
		"PRIORITY_BOARDING_CHANGE":          14,
		"PRIORITY_REDUCED_SERVICE":          15,
		"PRIORITY_PLANNED_WORK":             16,
		"PRIORITY_PLANNED_STATIONS_SKIPPED": 17,
		"PRIORITY_PLANNED_EXPRESS_TO_LOCAL": 18,
		"PRIORITY_SLOW_SPEEDS":              19,
		"PRIORITY_EXPECT_DELAYS":            20,
		"PRIORITY_PLANNED_LOCAL_TO_EXPRESS": 21,
		"PRIORITY_PLANNED_BUSES_DETOURED":   22,
		"PRIORITY_PLANNED_TRAINS_REROUTED":  23,
		"PRIORITY_PLANNED_SUBSTITUTE_BUSES": 24,
		"PRIORITY_PLANNED_PART_SUSPENDED":   25,
		"PRIORITY_PLANNED_MULTIPLE_CHANGES": 26,
		"PRIORITY_SOME_DELAYS":              27,
		"PRIORITY_STATIONS_SKIPPED":         28,
		"PRIORITY_EXPRESS_TO_LOCAL":         29,
		"PRIORITY_DELAYS":                   30,
		"PRIORITY_SOME_REROUTES":            31,
		"PRIORITY_LOCAL_TO_EXPRESS":         32,
		"PRIORITY_BUSES_DETOURED":           33,
		"PRIORITY_SERVICE_CHANGE":           34,
		"PRIORITY_TRAINS_REROUTED":          35,
		"PRIORITY_SUBSTITUTE_BUSES":         36,
		"PRIORITY_PART_SUSPENDED":           37,
		"PRIORITY_MULTIPLE_CHANGES":         38,
		"PRIORITY_PLANNED_SUSPENDED":        39,
		"PRIORITY_SUSPENDED":                40,
	}
)

func (x MercuryEntitySelector_Priority) Enum() *MercuryEntitySelector_Priority {
	p := new(MercuryEntitySelector_Priority)
	*p = x
	return p
}

func (x MercuryEntitySelector_Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MercuryEntitySelector_Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_us_ny_mta_alerts_extension_proto_enumTypes[0].Descriptor()
}

func (MercuryEntitySelector_Priority) Type() protoreflect.EnumType {
	return &file_proto_us_ny_mta_alerts_extension_proto_enumTypes[0]
}

func (x MercuryEntitySelector_Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MercuryEntitySelector_Priority) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MercuryEntitySelector_Priority(num)
	return nil
}

// Deprecated: Use MercuryEntitySelector_Priority.Descriptor instead.
func (MercuryEntitySelector_Priority) EnumDescriptor() ([]byte, []int) {
	return file_proto_us_ny_mta_alerts_extension_proto_rawDescGZIP(), []int{3, 0}
}

// Mercury extensions for the Feed Header
type MercuryFeedHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version of the Mercury extensions
	// The current version is 1.0
	MercuryVersion *string `protobuf:"bytes,1,req,name=mercury_version,json=mercuryVersion" json:"mercury_version,omitempty"`
}

func (x *MercuryFeedHeader) Reset() {
	*x = MercuryFeedHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_us_ny_mta_alerts_extension_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MercuryFeedHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MercuryFeedHeader) ProtoMessage() {}

func (x *MercuryFeedHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_us_ny_mta_alerts_extension_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MercuryFeedHeader.ProtoReflect.Descriptor instead.
func (*MercuryFeedHeader) Descriptor() ([]byte, []int) {
	return file_proto_us_ny_mta_alerts_extension_proto_rawDescGZIP(), []int{0}
}

func (x *MercuryFeedHeader) GetMercuryVersion() string {
	if x != nil && x.MercuryVersion != nil {
		return *x.MercuryVersion
	}
	return ""
}

type MercuryStationAlternative struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AffectedEntity *EntitySelector   `protobuf:"bytes,1,req,name=affected_entity,json=affectedEntity" json:"affected_entity,omitempty"`
	Notes          *TranslatedString `protobuf:"bytes,2,req,name=notes" json:"notes,omitempty"`
}

func (x *MercuryStationAlternative) Reset() {
	*x = MercuryStationAlternative{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_us_ny_mta_alerts_extension_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MercuryStationAlternative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MercuryStationAlternative) ProtoMessage() {}

func (x *MercuryStationAlternative) ProtoReflect() protoreflect.Message {
	mi := &file_proto_us_ny_mta_alerts_extension_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MercuryStationAlternative.ProtoReflect.Descriptor instead.
func (*MercuryStationAlternative) Descriptor() ([]byte, []int) {
	return file_proto_us_ny_mta_alerts_extension_proto_rawDescGZIP(), []int{1}
}

func (x *MercuryStationAlternative) GetAffectedEntity() *EntitySelector {
	if x != nil {
		return x.AffectedEntity
	}
	return nil
}

func (x *MercuryStationAlternative) GetNotes() *TranslatedString {
	if x != nil {
		return x.Notes
	}
	return nil
}

// Mercury extensions for the Feed Alert
type MercuryAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt          *uint64                      `protobuf:"varint,1,req,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt          *uint64                      `protobuf:"varint,2,req,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	AlertType          *string                      `protobuf:"bytes,3,req,name=alert_type,json=alertType" json:"alert_type,omitempty"`
	StationAlternative []*MercuryStationAlternative `protobuf:"bytes,4,rep,name=station_alternative,json=stationAlternative" json:"station_alternative,omitempty"`
	ServicePlanNumber  []string                     `protobuf:"bytes,5,rep,name=service_plan_number,json=servicePlanNumber" json:"service_plan_number,omitempty"`
	GeneralOrderNumber []string                     `protobuf:"bytes,6,rep,name=general_order_number,json=generalOrderNumber" json:"general_order_number,omitempty"`
	// A time interval, in seconds, indicating how long before each active period
	// consumers should display this alert. A value of 3600 here, for example,
	// suggests that this alert should be displayed 1 hour before each active
	// period. Consumers may choose to ignore this recommendation and display (or
	// not display) alerts based on their own logic if they so choose.
	DisplayBeforeActive *uint64 `protobuf:"varint,7,opt,name=display_before_active,json=displayBeforeActive" json:"display_before_active,omitempty"`
	// A human-friendly string that summarizes all active periods for this Alert,
	// i.e. "Sundays in May from 10:45pm to midnight"
	HumanReadableActivePeriod *TranslatedString `protobuf:"bytes,8,opt,name=human_readable_active_period,json=humanReadableActivePeriod" json:"human_readable_active_period,omitempty"`
	Directionality            *uint64           `protobuf:"varint,9,opt,name=directionality" json:"directionality,omitempty"`
	AffectedStations          []*EntitySelector `protobuf:"bytes,10,rep,name=affected_stations,json=affectedStations" json:"affected_stations,omitempty"`
	ScreensSummary            *TranslatedString `protobuf:"bytes,11,opt,name=screens_summary,json=screensSummary" json:"screens_summary,omitempty"`
	NoAffectedStations        *bool             `protobuf:"varint,12,opt,name=no_affected_stations,json=noAffectedStations" json:"no_affected_stations,omitempty"`
	// The ids of the planned work cloned from
	CloneId *string `protobuf:"bytes,13,opt,name=clone_id,json=cloneId" json:"clone_id,omitempty"`
}

func (x *MercuryAlert) Reset() {
	*x = MercuryAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_us_ny_mta_alerts_extension_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MercuryAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MercuryAlert) ProtoMessage() {}

func (x *MercuryAlert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_us_ny_mta_alerts_extension_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MercuryAlert.ProtoReflect.Descriptor instead.
func (*MercuryAlert) Descriptor() ([]byte, []int) {
	return file_proto_us_ny_mta_alerts_extension_proto_rawDescGZIP(), []int{2}
}

func (x *MercuryAlert) GetCreatedAt() uint64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *MercuryAlert) GetUpdatedAt() uint64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *MercuryAlert) GetAlertType() string {
	if x != nil && x.AlertType != nil {
		return *x.AlertType
	}
	return ""
}

func (x *MercuryAlert) GetStationAlternative() []*MercuryStationAlternative {
	if x != nil {
		return x.StationAlternative
	}
	return nil
}

func (x *MercuryAlert) GetServicePlanNumber() []string {
	if x != nil {
		return x.ServicePlanNumber
	}
	return nil
}

func (x *MercuryAlert) GetGeneralOrderNumber() []string {
	if x != nil {
		return x.GeneralOrderNumber
	}
	return nil
}

func (x *MercuryAlert) GetDisplayBeforeActive() uint64 {
	if x != nil && x.DisplayBeforeActive != nil {
		return *x.DisplayBeforeActive
	}
	return 0
}

func (x *MercuryAlert) GetHumanReadableActivePeriod() *TranslatedString {
	if x != nil {
		return x.HumanReadableActivePeriod
	}
	return nil
}

func (x *MercuryAlert) GetDirectionality() uint64 {
	if x != nil && x.Directionality != nil {
		return *x.Directionality
	}
	return 0
}

func (x *MercuryAlert) GetAffectedStations() []*EntitySelector {
	if x != nil {
		return x.AffectedStations
	}
	return nil
}

func (x *MercuryAlert) GetScreensSummary() *TranslatedString {
	if x != nil {
		return x.ScreensSummary
	}
	return nil
}

func (x *MercuryAlert) GetNoAffectedStations() bool {
	if x != nil && x.NoAffectedStations != nil {
		return *x.NoAffectedStations
	}
	return false
}

func (x *MercuryAlert) GetCloneId() string {
	if x != nil && x.CloneId != nil {
		return *x.CloneId
	}
	return ""
}

// Mercury extensions for the Feed Entity Selector
type MercuryEntitySelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Format for sort_order is 'GTFS-ID:Priority', e.g. 'MTASBWY:G:16'
	SortOrder *string `protobuf:"bytes,1,req,name=sort_order,json=sortOrder" json:"sort_order,omitempty"`
}

func (x *MercuryEntitySelector) Reset() {
	*x = MercuryEntitySelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_us_ny_mta_alerts_extension_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MercuryEntitySelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MercuryEntitySelector) ProtoMessage() {}

func (x *MercuryEntitySelector) ProtoReflect() protoreflect.Message {
	mi := &file_proto_us_ny_mta_alerts_extension_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MercuryEntitySelector.ProtoReflect.Descriptor instead.
func (*MercuryEntitySelector) Descriptor() ([]byte, []int) {
	return file_proto_us_ny_mta_alerts_extension_proto_rawDescGZIP(), []int{3}
}

func (x *MercuryEntitySelector) GetSortOrder() string {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return ""
}

var file_proto_us_ny_mta_alerts_extension_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*Alert)(nil),
		ExtensionType: (*MercuryAlert)(nil),
		Field:         1001,
		Name:          "transit_realtime.mercury_alert",
		Tag:           "bytes,1001,opt,name=mercury_alert",
		Filename:      "proto/us-ny-mta-alerts-extension.proto",
	},
	{
		ExtendedType:  (*EntitySelector)(nil),
		ExtensionType: (*MercuryEntitySelector)(nil),
		Field:         1001,
		Name:          "transit_realtime.mercury_entity_selector",
		Tag:           "bytes,1001,opt,name=mercury_entity_selector",
		Filename:      "proto/us-ny-mta-alerts-extension.proto",
	},
}

// Extension fields to Alert.
var (
	// optional transit_realtime.MercuryAlert mercury_alert = 1001;
	E_MercuryAlert = &file_proto_us_ny_mta_alerts_extension_proto_extTypes[0]
)

// Extension fields to EntitySelector.
var (
	// optional transit_realtime.MercuryEntitySelector mercury_entity_selector = 1001;
	E_MercuryEntitySelector = &file_proto_us_ny_mta_alerts_extension_proto_extTypes[1]
)

var File_proto_us_ny_mta_alerts_extension_proto protoreflect.FileDescriptor

var file_proto_us_ny_mta_alerts_extension_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x2d, 0x6e, 0x79, 0x2d, 0x6d, 0x74,
	0x61, 0x2d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x74, 0x66, 0x73, 0x2d, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79,
	0x46, 0x65, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65,
	0x72, 0x63, 0x75, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x49, 0x0a, 0x0f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0e, 0x61, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xd5, 0x05, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63, 0x75,
	0x72, 0x79, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x12,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x63, 0x0a, 0x1c, 0x68, 0x75, 0x6d, 0x61,
	0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x19, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x10, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x0f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x5f,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x6f, 0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x6e, 0x6f, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0xb3,
	0x0a, 0x0a, 0x15, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xfa, 0x09, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x49, 0x4f, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x5f, 0x4d, 0x49, 0x44, 0x44, 0x41, 0x59, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x49, 0x4f, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x4e, 0x49, 0x47, 0x48, 0x54,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x52,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x45, 0x4e,
	0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x50,
	0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x44, 0x41, 0x59, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x45, 0x4e, 0x44, 0x5f, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x49,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x41, 0x54, 0x55, 0x52, 0x44, 0x41, 0x59, 0x5f, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x49,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x55, 0x4e, 0x44, 0x41, 0x59, 0x5f, 0x53, 0x43, 0x48,
	0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x49, 0x4f, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45,
	0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x10, 0x0b, 0x12,
	0x1a, 0x0a, 0x16, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x41, 0x4c, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x0c, 0x12, 0x24, 0x0a, 0x20, 0x50,
	0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f,
	0x42, 0x4f, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10,
	0x0d, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x42, 0x4f,
	0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0e, 0x12,
	0x1c, 0x0a, 0x18, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x44, 0x55,
	0x43, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x0f, 0x12, 0x19, 0x0a,
	0x15, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45,
	0x44, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x10, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x52, 0x49, 0x4f,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x11, 0x12,
	0x25, 0x0a, 0x21, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e,
	0x4e, 0x45, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x4f, 0x5f, 0x4c,
	0x4f, 0x43, 0x41, 0x4c, 0x10, 0x12, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x53, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x53, 0x10, 0x13,
	0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x58, 0x50,
	0x45, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x53, 0x10, 0x14, 0x12, 0x25, 0x0a, 0x21,
	0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44,
	0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x54, 0x4f, 0x5f, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53,
	0x53, 0x10, 0x15, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x42, 0x55, 0x53, 0x45, 0x53, 0x5f, 0x44, 0x45,
	0x54, 0x4f, 0x55, 0x52, 0x45, 0x44, 0x10, 0x16, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x52, 0x49, 0x4f,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x54, 0x52, 0x41,
	0x49, 0x4e, 0x53, 0x5f, 0x52, 0x45, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x44, 0x10, 0x17, 0x12, 0x25,
	0x0a, 0x21, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e,
	0x45, 0x44, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x54, 0x49, 0x54, 0x55, 0x54, 0x45, 0x5f, 0x42, 0x55,
	0x53, 0x45, 0x53, 0x10, 0x18, 0x12, 0x23, 0x0a, 0x1f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x5f, 0x53,
	0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x19, 0x12, 0x25, 0x0a, 0x21, 0x50, 0x52,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x5f, 0x4d,
	0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x10,
	0x1a, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f,
	0x4d, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x53, 0x10, 0x1b, 0x12, 0x1d, 0x0a, 0x19, 0x50,
	0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x1c, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x54,
	0x4f, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x1d, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x49,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x41, 0x59, 0x53, 0x10, 0x1e, 0x12, 0x1a,
	0x0a, 0x16, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f, 0x4d, 0x45, 0x5f,
	0x52, 0x45, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x53, 0x10, 0x1f, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52,
	0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x54, 0x4f, 0x5f,
	0x45, 0x58, 0x50, 0x52, 0x45, 0x53, 0x53, 0x10, 0x20, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x49,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x42, 0x55, 0x53, 0x45, 0x53, 0x5f, 0x44, 0x45, 0x54, 0x4f,
	0x55, 0x52, 0x45, 0x44, 0x10, 0x21, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x10, 0x22, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x54, 0x52, 0x41, 0x49, 0x4e, 0x53, 0x5f, 0x52, 0x45, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x44, 0x10,
	0x23, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x55,
	0x42, 0x53, 0x54, 0x49, 0x54, 0x55, 0x54, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x45, 0x53, 0x10, 0x24,
	0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x41, 0x52,
	0x54, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x25, 0x12, 0x1d, 0x0a,
	0x19, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50,
	0x4c, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x53, 0x10, 0x26, 0x12, 0x1e, 0x0a, 0x1a,
	0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e, 0x45, 0x44,
	0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x27, 0x12, 0x16, 0x0a, 0x12,
	0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44,
	0x45, 0x44, 0x10, 0x28, 0x3a, 0x5d, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x5f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x18, 0xe9,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x3a, 0x82, 0x01, 0x0a, 0x17, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x75, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x15, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x42, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x2e, 0x72,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x66, 0x65, 0x6e, 0x6e, 0x65, 0x6c,
	0x6c, 0x2f, 0x67, 0x74, 0x66, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_proto_us_ny_mta_alerts_extension_proto_rawDescOnce sync.Once
	file_proto_us_ny_mta_alerts_extension_proto_rawDescData = file_proto_us_ny_mta_alerts_extension_proto_rawDesc
)

func file_proto_us_ny_mta_alerts_extension_proto_rawDescGZIP() []byte {
	file_proto_us_ny_mta_alerts_extension_proto_rawDescOnce.Do(func() {
		file_proto_us_ny_mta_alerts_extension_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_us_ny_mta_alerts_extension_proto_rawDescData)
	})
	return file_proto_us_ny_mta_alerts_extension_proto_rawDescData
}

var file_proto_us_ny_mta_alerts_extension_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_us_ny_mta_alerts_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_us_ny_mta_alerts_extension_proto_goTypes = []interface{}{
	(MercuryEntitySelector_Priority)(0), // 0: transit_realtime.MercuryEntitySelector.Priority
	(*MercuryFeedHeader)(nil),           // 1: transit_realtime.MercuryFeedHeader
	(*MercuryStationAlternative)(nil),   // 2: transit_realtime.MercuryStationAlternative
	(*MercuryAlert)(nil),                // 3: transit_realtime.MercuryAlert
	(*MercuryEntitySelector)(nil),       // 4: transit_realtime.MercuryEntitySelector
	(*EntitySelector)(nil),              // 5: transit_realtime.EntitySelector
	(*TranslatedString)(nil),            // 6: transit_realtime.TranslatedString
	(*Alert)(nil),                       // 7: transit_realtime.Alert
}
var file_proto_us_ny_mta_alerts_extension_proto_depIdxs = []int32{
	5,  // 0: transit_realtime.MercuryStationAlternative.affected_entity:type_name -> transit_realtime.EntitySelector
	6,  // 1: transit_realtime.MercuryStationAlternative.notes:type_name -> transit_realtime.TranslatedString
	2,  // 2: transit_realtime.MercuryAlert.station_alternative:type_name -> transit_realtime.MercuryStationAlternative
	6,  // 3: transit_realtime.MercuryAlert.human_readable_active_period:type_name -> transit_realtime.TranslatedString
	5,  // 4: transit_realtime.MercuryAlert.affected_stations:type_name -> transit_realtime.EntitySelector
	6,  // 5: transit_realtime.MercuryAlert.screens_summary:type_name -> transit_realtime.TranslatedString
	7,  // 6: transit_realtime.mercury_alert:extendee -> transit_realtime.Alert
	5,  // 7: transit_realtime.mercury_entity_selector:extendee -> transit_realtime.EntitySelector
	3,  // 8: transit_realtime.mercury_alert:type_name -> transit_realtime.MercuryAlert
	4,  // 9: transit_realtime.mercury_entity_selector:type_name -> transit_realtime.MercuryEntitySelector
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	8,  // [8:10] is the sub-list for extension type_name
	6,  // [6:8] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_us_ny_mta_alerts_extension_proto_init() }
func file_proto_us_ny_mta_alerts_extension_proto_init() {
	if File_proto_us_ny_mta_alerts_extension_proto != nil {
		return
	}
	file_proto_gtfs_realtime_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_us_ny_mta_alerts_extension_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MercuryFeedHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_us_ny_mta_alerts_extension_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MercuryStationAlternative); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_us_ny_mta_alerts_extension_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MercuryAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_us_ny_mta_alerts_extension_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MercuryEntitySelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_us_ny_mta_alerts_extension_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_proto_us_ny_mta_alerts_extension_proto_goTypes,
		DependencyIndexes: file_proto_us_ny_mta_alerts_extension_proto_depIdxs,
		EnumInfos:         file_proto_us_ny_mta_alerts_extension_proto_enumTypes,
		MessageInfos:      file_proto_us_ny_mta_alerts_extension_proto_msgTypes,
		ExtensionInfos:    file_proto_us_ny_mta_alerts_extension_proto_extTypes,
	}.Build()
	File_proto_us_ny_mta_alerts_extension_proto = out.File
	file_proto_us_ny_mta_alerts_extension_proto_rawDesc = nil
	file_proto_us_ny_mta_alerts_extension_proto_goTypes = nil
	file_proto_us_ny_mta_alerts_extension_proto_depIdxs = nil
}
